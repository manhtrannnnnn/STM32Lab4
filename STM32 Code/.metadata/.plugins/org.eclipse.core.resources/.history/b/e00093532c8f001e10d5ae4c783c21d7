/*
 * schedule.h
 *
 *  Created on: Nov 29, 2023
 *      Author: ASUS TUF
 */

#ifndef INC_SCHEDULER_H_
#define INC_SCHEDULER_H_
#include "stdint.h"

/*typedef struct{
	void (*pTask)(void);
	uint32_t Delay;
	uint32_t Period;
	uint8_t RunMe;

	uint32_t TaskID;
}sTasks;

#define SCH_MAX_TASKS 10

void SCH_Init(void);

void SCH_Add_Task(void (*pFunction)(), uint32_t Delay, uint32_t Period);

void SCH_Update(void);

void SCH_Dispatch_Tasks(void);

void SCH_Delete_Task(uint32_t TASK_INDEX);*/
#define SCH_MAX_TASKS   10
#define NO_TASK_ID      0
#define TICK			10

typedef struct{
    void (*pTask)(void);
    uint32_t Delay;
    uint32_t Period;
    uint8_t Runme;

    uint32_t taskID;
}sTask;

extern uint8_t current_index_task;

void SCH_Init(void);
void SCH_Update(void);
uint8_t SCH_Add_Task(void (*pFunction)(), uint32_t DELAY, uint32_t PERIOD);
void SCH_Dispatch_Tasks(void);
uint8_t SCH_Delete_Task(const uint8_t TASK_INDEX);
//void SCH_report_error(void);
#endif /* INC_SCHEDULER_H_ */
